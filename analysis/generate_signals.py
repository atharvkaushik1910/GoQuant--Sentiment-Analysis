# -*- coding: utf-8 -*-
"""generate_signals

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DH9ERfI_lKkbYF9YR0RVdRet3XKI1SWz
"""

# analysis/generate_signals.py

import pandas as pd

def load_data(asset):
    sentiment = pd.read_csv('data/aggregate_sentiment.csv')
    prices = pd.read_csv(f'data/processed_prices/{asset}_price.csv', parse_dates=['Datetime'], index_col='Datetime')
    correlation_df = pd.read_csv('data/sentiment_price_correlation.csv')

    return sentiment, prices, correlation_df


def generate_signals(asset, sentiment, prices, correlation_df):
    price_pct_change = prices['Close'].pct_change().fillna(0)

    latest_sentiment = sentiment.iloc[-1]['compound']
    latest_price_change = price_pct_change.iloc[-1]

    correlation_row = correlation_df[correlation_df['asset'] == asset]
    if correlation_row.empty:
        print(f"No correlation data for {asset}")
        return None, None

    correlation = correlation_row['correlation'].values[0]

    print(f"\nAsset: {asset}")
    print(f"Latest Sentiment: {latest_sentiment}")
    print(f"Latest Price Change %: {latest_price_change * 100:.2f}%")
    print(f"Correlation with Sentiment: {correlation}")

    signal = 'HOLD'
    confidence = 0

    if latest_sentiment > 0.2 and latest_price_change > 0 and correlation > 0.3:
        signal = 'BUY'
        confidence = (latest_sentiment + correlation) * 50
    elif latest_sentiment < -0.2 and latest_price_change < 0 and correlation > 0.3:
        signal = 'SELL'
        confidence = (abs(latest_sentiment) + correlation) * 50

    print(f"Trade Signal: {signal}")
    print(f"Confidence Score: {confidence:.2f}")

    return signal, confidence


if __name__ == '__main__':
    assets = ['BTC-USD', 'ETH-USD', 'SOL-USD', 'AAPL', 'TSLA']
    for asset in assets:
        sentiment, prices, correlation_df = load_data(asset)
        generate_signals(asset, sentiment, prices, correlation_df)