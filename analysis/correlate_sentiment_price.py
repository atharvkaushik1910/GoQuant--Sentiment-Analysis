# -*- coding: utf-8 -*-
"""correlate_sentiment_price

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s2XU1ZO1OloldDEVzOuNF6_HWfGMMH-q
"""

import pandas as pd
import os

def load_price_data(asset):
    price_file = f'data/processed_prices/{asset}_price.csv'
    if os.path.exists(price_file):
        return pd.read_csv(price_file, parse_dates=['Datetime'])
    else:
        print(f"No price data for {asset}")
        return None

def load_sentiment_data():
    tweets = pd.read_csv('data/tweets_sentiment.csv', parse_dates=['datetime'])
    reddit = pd.read_csv('data/reddit_sentiment.csv', parse_dates=['datetime'])
    news = pd.read_csv('data/news_sentiment.csv', parse_dates=['datetime'])

    all_sentiments = pd.concat([tweets, reddit, news], ignore_index=True)
    all_sentiments = all_sentiments[['datetime', 'compound']].rename(columns={'datetime': 'Datetime'})
    return all_sentiments

def correlate(asset, sentiment_data):
    price_data = load_price_data(asset)

    if price_data is None:
        return None

    merged = pd.merge_asof(
        sentiment_data.sort_values('Datetime'),
        price_data.sort_values('Datetime'),
        on='Datetime',
        direction='nearest'
    )

    correlation = merged['compound'].corr(merged['% Change'])
    print(f"Correlation between sentiment and % price change for {asset}: {correlation:.4f}")
    return {'Asset': asset, 'Correlation': correlation}

if __name__ == "__main__":
    assets = ['BTC-USD', 'ETH-USD', 'SOL-USD', 'AAPL', 'TSLA']
    sentiment_data = load_sentiment_data()

    results = []
    for asset in assets:
        result = correlate(asset, sentiment_data)
        if result:
            results.append(result)

    # Save results to CSV
    results_df = pd.DataFrame(results)
    os.makedirs('data', exist_ok=True)
    results_df.to_csv('data/sentiment_price_correlation.csv', index=False)
    print("Saved correlation results to data/sentiment_price_correlation.csv")